# Streamable HTTP Transport Configuration
# This profile configures MCP servers that run as HTTP services with streamable responses

# Example Streamable HTTP Server #1 (uncomment and configure)
# spring.ai.mcp.client.streamable-http.connections.http-server.url=http://localhost:8080

# Example Streamable HTTP Server #2 (uncomment and configure)
# spring.ai.mcp.client.streamable-http.connections.api-server.url=http://localhost:9000
# spring.ai.mcp.client.streamable-http.connections.api-server.headers.Authorization=Bearer ${YOUR_TOKEN}

# OpenMetadata MCP server via Streamable HTTP
spring.ai.mcp.client.streamable-http.connections.omd.url=http://big-data-004.kuhn-labs.com:8585/mcp/sse
spring.ai.mcp.client.streamable-http.connections.omd.headers.Authorization=Bearer ${OPENMETADATA_PAT}
spring.ai.mcp.client.streamable-http.connections.omd.headers.Accept=text/event-stream

# Custom Streamable HTTP Server (example configuration)
# spring.ai.mcp.client.streamable-http.connections.custom-http.url=https://your-server.com/mcp
# spring.ai.mcp.client.streamable-http.connections.custom-http.headers.Content-Type=application/json
# spring.ai.mcp.client.streamable-http.connections.custom-http.headers.X-API-Key=${YOUR_API_KEY}

# Note: Streamable HTTP servers must implement the MCP protocol over HTTP
# with support for streaming responses and be accessible at the configured URLs